[DEBUG]: Запуск компилятора в режиме отладки
[TRACE]: Начало трассировки выполнения

Анализ файла: D:\Work\ClojureDev\c2\Compiler\c2\compiler\test\c4ast\bitwise_operations_test.c
Содержимое:
/* Тестовый файл для проверки битовых операций */


// Функция проверки бита
unsigned char check_bit(unsigned char reg, unsigned char bit) {
    return (reg & (1 << bit)) != 0;
}

// Функция для работы с битовыми полями
unsigned char extract_bits(unsigned char value, unsigned char start, unsigned char length) {
    return (value >> start) & ((1 << length) - 1);
}

// Главная функция
int main() {
    unsigned char port = 0x00;  // Исходное значение порта
    
    // Установка отдельных битов
    set_bit(&port, 0);  // Устанавливаем бит 0 -> 0x01
    set_bit(&port, 3);  // Устанавливаем бит 3 -> 0x09
    
    // Переключение бита
    toggle_bit(&port, 0);  // Переключаем бит 0 -> 0x08
    toggle_bit(&port, 1);  // Переключаем бит 1 -> 0x0A
    
    // Проверка битов
    unsigned char bit0 = check_bit(port, 0);  // Должно быть 0
    unsigned char bit1 = check_bit(port, 1);  // Должно быть 1
    unsigned char bit3 = check_bit(port, 3);  // Должно быть 1
    
    // Сброс бита
    clear_bit(&port, 3);  // Сбрасываем бит 3 -> 0x02
    
    // Составное значение
    unsigned char value = 0x5A;  // 01011010 в двоичном виде
    
    // Извлечение битовых полей
    unsigned char low_nibble = extract_bits(value, 0, 4);   // Должно быть 0x0A
    unsigned char high_nibble = extract_bits(value, 4, 4);  // Должно быть 0x05
    
    // Битовые операции с масками
    unsigned char mask1 = 0x0F;  // Маска для младших 4 битов
    unsigned char mask2 = 0xF0;  // Маска для старших 4 битов
    
    unsigned char result1 = value & mask1;  // Должно быть 0x0A
    unsigned char result2 = value & mask2;  // Должно быть 0x50
    
    // Сдвиги
    unsigned char left_shift = value << 1;   // Должно быть 0xB4
    unsigned char right_shift = value >> 1;  // Должно быть 0x2D
    
    return 0;
} 

Токены:
[[:comment /* Тестовый файл для проверки битовых операций */] [:comment // Функция проверки бита] [:keyword unsigned] [:keyword char] [:identifier check_bit] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier reg] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier bit] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier reg] [:operator &] [:open-paren (] [:number 1] [:operator <<] [:identifier bit] [:close-paren )] [:close-paren )] [:operator !=] [:number 0] [:separator ;] [:close-brace }] [:comment // Функция для работы с битовыми полями] [:keyword unsigned] [:keyword char] [:identifier extract_bits] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier value] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier start] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier length] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier value] [:operator >>] [:identifier start] [:close-paren )] [:operator &] [:open-paren (] [:open-paren (] [:number 1] [:operator <<] [:identifier length] [:close-paren )] [:operator -] [:number 1] [:close-paren )] [:separator ;] [:close-brace }] [:comment // Главная функция] [:keyword int] [:identifier main] [:open-paren (] [:close-paren )] [:open-brace {] [:keyword unsigned] [:keyword char] [:identifier port] [:operator =] [:number 0x00] [:separator ;] [:comment // Исходное значение порта] [:comment // Установка отдельных битов] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 0 -> 0x01] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 3 -> 0x09] [:comment // Переключение бита] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Переключаем бит 0 -> 0x08] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Переключаем бит 1 -> 0x0A] [:comment // Проверка битов] [:keyword unsigned] [:keyword char] [:identifier bit0] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Должно быть 0] [:keyword unsigned] [:keyword char] [:identifier bit1] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:keyword unsigned] [:keyword char] [:identifier bit3] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:comment // Сброс бита] [:identifier clear_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Сбрасываем бит 3 -> 0x02] [:comment // Составное значение] [:keyword unsigned] [:keyword char] [:identifier value] [:operator =] [:number 0x5A] [:separator ;] [:comment // 01011010 в двоичном виде] [:comment // Извлечение битовых полей] [:keyword unsigned] [:keyword char] [:identifier low_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 0] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier high_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 4] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x05] [:comment // Битовые операции с масками] [:keyword unsigned] [:keyword char] [:identifier mask1] [:operator =] [:number 0x0F] [:separator ;] [:comment // Маска для младших 4 битов] [:keyword unsigned] [:keyword char] [:identifier mask2] [:operator =] [:number 0xF0] [:separator ;] [:comment // Маска для старших 4 битов] [:keyword unsigned] [:keyword char] [:identifier result1] [:operator =] [:identifier value] [:operator &] [:identifier mask1] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier result2] [:operator =] [:identifier value] [:operator &] [:identifier mask2] [:separator ;] [:comment // Должно быть 0x50] [:comment // Сдвиги] [:keyword unsigned] [:keyword char] [:identifier left_shift] [:operator =] [:identifier value] [:operator <<] [:number 1] [:separator ;] [:comment // Должно быть 0xB4] [:keyword unsigned] [:keyword char] [:identifier right_shift] [:operator =] [:identifier value] [:operator >>] [:number 1] [:separator ;] [:comment // Должно быть 0x2D] [:keyword return] [:number 0] [:separator ;] [:close-brace }]]

AST:
Начало парсинга входной строки
Токены после лексического анализа: [[:comment /* Тестовый файл для проверки битовых операций */] [:comment // Функция проверки бита] [:keyword unsigned] [:keyword char] [:identifier check_bit] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier reg] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier bit] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier reg] [:operator &] [:open-paren (] [:number 1] [:operator <<] [:identifier bit] [:close-paren )] [:close-paren )] [:operator !=] [:number 0] [:separator ;] [:close-brace }] [:comment // Функция для работы с битовыми полями] [:keyword unsigned] [:keyword char] [:identifier extract_bits] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier value] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier start] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier length] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier value] [:operator >>] [:identifier start] [:close-paren )] [:operator &] [:open-paren (] [:open-paren (] [:number 1] [:operator <<] [:identifier length] [:close-paren )] [:operator -] [:number 1] [:close-paren )] [:separator ;] [:close-brace }] [:comment // Главная функция] [:keyword int] [:identifier main] [:open-paren (] [:close-paren )] [:open-brace {] [:keyword unsigned] [:keyword char] [:identifier port] [:operator =] [:number 0x00] [:separator ;] [:comment // Исходное значение порта] [:comment // Установка отдельных битов] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 0 -> 0x01] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 3 -> 0x09] [:comment // Переключение бита] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Переключаем бит 0 -> 0x08] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Переключаем бит 1 -> 0x0A] [:comment // Проверка битов] [:keyword unsigned] [:keyword char] [:identifier bit0] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Должно быть 0] [:keyword unsigned] [:keyword char] [:identifier bit1] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:keyword unsigned] [:keyword char] [:identifier bit3] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:comment // Сброс бита] [:identifier clear_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Сбрасываем бит 3 -> 0x02] [:comment // Составное значение] [:keyword unsigned] [:keyword char] [:identifier value] [:operator =] [:number 0x5A] [:separator ;] [:comment // 01011010 в двоичном виде] [:comment // Извлечение битовых полей] [:keyword unsigned] [:keyword char] [:identifier low_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 0] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier high_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 4] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x05] [:comment // Битовые операции с масками] [:keyword unsigned] [:keyword char] [:identifier mask1] [:operator =] [:number 0x0F] [:separator ;] [:comment // Маска для младших 4 битов] [:keyword unsigned] [:keyword char] [:identifier mask2] [:operator =] [:number 0xF0] [:separator ;] [:comment // Маска для старших 4 битов] [:keyword unsigned] [:keyword char] [:identifier result1] [:operator =] [:identifier value] [:operator &] [:identifier mask1] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier result2] [:operator =] [:identifier value] [:operator &] [:identifier mask2] [:separator ;] [:comment // Должно быть 0x50] [:comment // Сдвиги] [:keyword unsigned] [:keyword char] [:identifier left_shift] [:operator =] [:identifier value] [:operator <<] [:number 1] [:separator ;] [:comment // Должно быть 0xB4] [:keyword unsigned] [:keyword char] [:identifier right_shift] [:operator =] [:identifier value] [:operator >>] [:number 1] [:separator ;] [:comment // Должно быть 0x2D] [:keyword return] [:number 0] [:separator ;] [:close-brace }]]
Парсинг выражения. Токены: [[:comment /* Тестовый файл для проверки битовых операций */] [:comment // Функция проверки бита] [:keyword unsigned] [:keyword char] [:identifier check_bit] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier reg] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier bit] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier reg] [:operator &] [:open-paren (] [:number 1] [:operator <<] [:identifier bit] [:close-paren )] [:close-paren )] [:operator !=] [:number 0] [:separator ;] [:close-brace }] [:comment // Функция для работы с битовыми полями] [:keyword unsigned] [:keyword char] [:identifier extract_bits] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier value] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier start] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier length] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier value] [:operator >>] [:identifier start] [:close-paren )] [:operator &] [:open-paren (] [:open-paren (] [:number 1] [:operator <<] [:identifier length] [:close-paren )] [:operator -] [:number 1] [:close-paren )] [:separator ;] [:close-brace }] [:comment // Главная функция] [:keyword int] [:identifier main] [:open-paren (] [:close-paren )] [:open-brace {] [:keyword unsigned] [:keyword char] [:identifier port] [:operator =] [:number 0x00] [:separator ;] [:comment // Исходное значение порта] [:comment // Установка отдельных битов] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 0 -> 0x01] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 3 -> 0x09] [:comment // Переключение бита] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Переключаем бит 0 -> 0x08] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Переключаем бит 1 -> 0x0A] [:comment // Проверка битов] [:keyword unsigned] [:keyword char] [:identifier bit0] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Должно быть 0] [:keyword unsigned] [:keyword char] [:identifier bit1] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:keyword unsigned] [:keyword char] [:identifier bit3] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:comment // Сброс бита] [:identifier clear_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Сбрасываем бит 3 -> 0x02] [:comment // Составное значение] [:keyword unsigned] [:keyword char] [:identifier value] [:operator =] [:number 0x5A] [:separator ;] [:comment // 01011010 в двоичном виде] [:comment // Извлечение битовых полей] [:keyword unsigned] [:keyword char] [:identifier low_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 0] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier high_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 4] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x05] [:comment // Битовые операции с масками] [:keyword unsigned] [:keyword char] [:identifier mask1] [:operator =] [:number 0x0F] [:separator ;] [:comment // Маска для младших 4 битов] [:keyword unsigned] [:keyword char] [:identifier mask2] [:operator =] [:number 0xF0] [:separator ;] [:comment // Маска для старших 4 битов] [:keyword unsigned] [:keyword char] [:identifier result1] [:operator =] [:identifier value] [:operator &] [:identifier mask1] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier result2] [:operator =] [:identifier value] [:operator &] [:identifier mask2] [:separator ;] [:comment // Должно быть 0x50] [:comment // Сдвиги] [:keyword unsigned] [:keyword char] [:identifier left_shift] [:operator =] [:identifier value] [:operator <<] [:number 1] [:separator ;] [:comment // Должно быть 0xB4] [:keyword unsigned] [:keyword char] [:identifier right_shift] [:operator =] [:identifier value] [:operator >>] [:number 1] [:separator ;] [:comment // Должно быть 0x2D] [:keyword return] [:number 0] [:separator ;] [:close-brace }]]
Парсинг терма. Токены: [[:comment /* Тестовый файл для проверки битовых операций */] [:comment // Функция проверки бита] [:keyword unsigned] [:keyword char] [:identifier check_bit] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier reg] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier bit] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier reg] [:operator &] [:open-paren (] [:number 1] [:operator <<] [:identifier bit] [:close-paren )] [:close-paren )] [:operator !=] [:number 0] [:separator ;] [:close-brace }] [:comment // Функция для работы с битовыми полями] [:keyword unsigned] [:keyword char] [:identifier extract_bits] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier value] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier start] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier length] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier value] [:operator >>] [:identifier start] [:close-paren )] [:operator &] [:open-paren (] [:open-paren (] [:number 1] [:operator <<] [:identifier length] [:close-paren )] [:operator -] [:number 1] [:close-paren )] [:separator ;] [:close-brace }] [:comment // Главная функция] [:keyword int] [:identifier main] [:open-paren (] [:close-paren )] [:open-brace {] [:keyword unsigned] [:keyword char] [:identifier port] [:operator =] [:number 0x00] [:separator ;] [:comment // Исходное значение порта] [:comment // Установка отдельных битов] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 0 -> 0x01] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 3 -> 0x09] [:comment // Переключение бита] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Переключаем бит 0 -> 0x08] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Переключаем бит 1 -> 0x0A] [:comment // Проверка битов] [:keyword unsigned] [:keyword char] [:identifier bit0] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Должно быть 0] [:keyword unsigned] [:keyword char] [:identifier bit1] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:keyword unsigned] [:keyword char] [:identifier bit3] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:comment // Сброс бита] [:identifier clear_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Сбрасываем бит 3 -> 0x02] [:comment // Составное значение] [:keyword unsigned] [:keyword char] [:identifier value] [:operator =] [:number 0x5A] [:separator ;] [:comment // 01011010 в двоичном виде] [:comment // Извлечение битовых полей] [:keyword unsigned] [:keyword char] [:identifier low_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 0] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier high_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 4] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x05] [:comment // Битовые операции с масками] [:keyword unsigned] [:keyword char] [:identifier mask1] [:operator =] [:number 0x0F] [:separator ;] [:comment // Маска для младших 4 битов] [:keyword unsigned] [:keyword char] [:identifier mask2] [:operator =] [:number 0xF0] [:separator ;] [:comment // Маска для старших 4 битов] [:keyword unsigned] [:keyword char] [:identifier result1] [:operator =] [:identifier value] [:operator &] [:identifier mask1] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier result2] [:operator =] [:identifier value] [:operator &] [:identifier mask2] [:separator ;] [:comment // Должно быть 0x50] [:comment // Сдвиги] [:keyword unsigned] [:keyword char] [:identifier left_shift] [:operator =] [:identifier value] [:operator <<] [:number 1] [:separator ;] [:comment // Должно быть 0xB4] [:keyword unsigned] [:keyword char] [:identifier right_shift] [:operator =] [:identifier value] [:operator >>] [:number 1] [:separator ;] [:comment // Должно быть 0x2D] [:keyword return] [:number 0] [:separator ;] [:close-brace }]]
Токен не соответствует предикату: [:comment /* Тестовый файл для проверки битовых операций */]
Ошибка при парсинге терма. Токены не соответствуют ни одному паттерну.
Парсинг терма. Токены: [[:comment /* Тестовый файл для проверки битовых операций */] [:comment // Функция проверки бита] [:keyword unsigned] [:keyword char] [:identifier check_bit] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier reg] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier bit] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier reg] [:operator &] [:open-paren (] [:number 1] [:operator <<] [:identifier bit] [:close-paren )] [:close-paren )] [:operator !=] [:number 0] [:separator ;] [:close-brace }] [:comment // Функция для работы с битовыми полями] [:keyword unsigned] [:keyword char] [:identifier extract_bits] [:open-paren (] [:keyword unsigned] [:keyword char] [:identifier value] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier start] [:separator ,] [:keyword unsigned] [:keyword char] [:identifier length] [:close-paren )] [:open-brace {] [:keyword return] [:open-paren (] [:identifier value] [:operator >>] [:identifier start] [:close-paren )] [:operator &] [:open-paren (] [:open-paren (] [:number 1] [:operator <<] [:identifier length] [:close-paren )] [:operator -] [:number 1] [:close-paren )] [:separator ;] [:close-brace }] [:comment // Главная функция] [:keyword int] [:identifier main] [:open-paren (] [:close-paren )] [:open-brace {] [:keyword unsigned] [:keyword char] [:identifier port] [:operator =] [:number 0x00] [:separator ;] [:comment // Исходное значение порта] [:comment // Установка отдельных битов] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 0 -> 0x01] [:identifier set_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Устанавливаем бит 3 -> 0x09] [:comment // Переключение бита] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Переключаем бит 0 -> 0x08] [:identifier toggle_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Переключаем бит 1 -> 0x0A] [:comment // Проверка битов] [:keyword unsigned] [:keyword char] [:identifier bit0] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 0] [:close-paren )] [:separator ;] [:comment // Должно быть 0] [:keyword unsigned] [:keyword char] [:identifier bit1] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 1] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:keyword unsigned] [:keyword char] [:identifier bit3] [:operator =] [:identifier check_bit] [:open-paren (] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Должно быть 1] [:comment // Сброс бита] [:identifier clear_bit] [:open-paren (] [:operator &] [:identifier port] [:separator ,] [:number 3] [:close-paren )] [:separator ;] [:comment // Сбрасываем бит 3 -> 0x02] [:comment // Составное значение] [:keyword unsigned] [:keyword char] [:identifier value] [:operator =] [:number 0x5A] [:separator ;] [:comment // 01011010 в двоичном виде] [:comment // Извлечение битовых полей] [:keyword unsigned] [:keyword char] [:identifier low_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 0] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier high_nibble] [:operator =] [:identifier extract_bits] [:open-paren (] [:identifier value] [:separator ,] [:number 4] [:separator ,] [:number 4] [:close-paren )] [:separator ;] [:comment // Должно быть 0x05] [:comment // Битовые операции с масками] [:keyword unsigned] [:keyword char] [:identifier mask1] [:operator =] [:number 0x0F] [:separator ;] [:comment // Маска для младших 4 битов] [:keyword unsigned] [:keyword char] [:identifier mask2] [:operator =] [:number 0xF0] [:separator ;] [:comment // Маска для старших 4 битов] [:keyword unsigned] [:keyword char] [:identifier result1] [:operator =] [:identifier value] [:operator &] [:identifier mask1] [:separator ;] [:comment // Должно быть 0x0A] [:keyword unsigned] [:keyword char] [:identifier result2] [:operator =] [:identifier value] [:operator &] [:identifier mask2] [:separator ;] [:comment // Должно быть 0x50] [:comment // Сдвиги] [:keyword unsigned] [:keyword char] [:identifier left_shift] [:operator =] [:identifier value] [:operator <<] [:number 1] [:separator ;] [:comment // Должно быть 0xB4] [:keyword unsigned] [:keyword char] [:identifier right_shift] [:operator =] [:identifier value] [:operator >>] [:number 1] [:separator ;] [:comment // Должно быть 0x2D] [:keyword return] [:number 0] [:separator ;] [:close-brace }]]
Токен не соответствует предикату: [:comment /* Тестовый файл для проверки битовых операций */]
Ошибка при парсинге терма. Токены не соответствуют ни одному паттерну.
Ошибка при парсинге выражения. Токены не соответствуют ни одному паттерну.
Парсинг выражения завершен. Оставшиеся токены: nil
Парсинг успешно завершен
Ошибка при построении AST: результат парсинга null
